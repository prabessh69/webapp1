if (typeof jQuery === "undefined") {
    throw new Error("Bootstrap's JavaScript requires jQuery");
}

(function($) {
    "use strict";
    var version = $.fn.jquery.split(" ")[0].split(".");
    if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1) || version[0] > 3) {
        throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4");
    }
})(jQuery);

(function($) {
    "use strict";
    function transitionEnd() {
        var el = document.createElement("bootstrap");
        var transitions = {
            WebkitTransition: "webkitTransitionEnd",
            MozTransition: "transitionend",
            OTransition: "oTransitionEnd otransitionend",
            transition: "transitionend"
        };
        for (var name in transitions) {
            if (el.style[name] !== undefined) {
                return { end: transitions[name] };
            }
        }
        return false;
    }
    
    $.fn.emulateTransitionEnd = function(duration) {
        var called = false, $el = this;
        $(this).one("bsTransitionEnd", function() { called = true; });
        setTimeout(function() { if (!called) $($el).trigger($.support.transition.end); }, duration);
        return this;
    };
    
    $(function() {
        $.support.transition = transitionEnd();
        if ($.support.transition) {
            $.event.special.bsTransitionEnd = {
                bindType: $.support.transition.end,
                delegateType: $.support.transition.end,
                handle: function(event) {
                    if ($(event.target).is(this)) {
                        return event.handleObj.handler.apply(this, arguments);
                    }
                }
            };
        }
    });
})(jQuery);

(function($) {
    "use strict";
    function Alert(element) {
        $(element).on("click", '[data-dismiss="alert"]', this.close);
    }
    
    Alert.VERSION = "3.3.7";
    Alert.TRANSITION_DURATION = 150;
    
    Alert.prototype.close = function(event) {
        var $this = $(this);
        var selector = $this.attr("data-target");
        if (!selector) {
            selector = $this.attr("href");
            selector = selector && selector.replace(/.*(?=#[^\s]*$)/, "");
        }
        var $parent = $(selector);
        if (event) event.preventDefault();
        if (!$parent.length) {
            $parent = $this.closest(".alert");
        }
        $parent.trigger(event = $.Event("close.bs.alert"));
        if (event.isDefaultPrevented()) return;
        $parent.removeClass("in");
        function removeElement() {
            $parent.detach().trigger("closed.bs.alert").remove();
        }
        $.support.transition && $parent.hasClass("fade")
            ? $parent.one("bsTransitionEnd", removeElement).emulateTransitionEnd(Alert.TRANSITION_DURATION)
            : removeElement();
    };
    
    var old = $.fn.alert;
    
    $.fn.alert = function(option) {
        return this.each(function() {
            var $this = $(this);
            var data = $this.data("bs.alert");
            if (!data) $this.data("bs.alert", (data = new Alert(this)));
            if (typeof option === "string") data[option].call($this);
        });
    };
    
    $.fn.alert.Constructor = Alert;
    
    $.fn.alert.noConflict = function() {
        $.fn.alert = old;
        return this;
    };
    
    $(document).on("click.bs.alert.data-api", '[data-dismiss="alert"]', Alert.prototype.close);
})(jQuery);


console.log("Bootstrap JS has been properly unminified and structured.");
